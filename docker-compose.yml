version: "3.9"
services:
###TODO CHECK permissions when git clone again
  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_DATABASE=$MONGO_DB
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=imagiaRoot
    ports:
      - "$MONGO_HOST_PORT:$MONGO_CONTAINER_PORT"
    volumes:
      - ./mongo.keyfile:/auth/file.key
    command: ["--keyFile", "/auth/file.key", "--replSet", "rs0", "--bind_ip_all"]
    healthcheck:
      test: test $$(echo "rs.initiate().ok" | mongosh -u root -p imagiaRoot --quiet) -eq 1 || exit 0      
      interval: 5s
  postgres:
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    ports:
      - "$POSTGRES_HOST_PORT:$POSTGRES_CONTAINER_PORT"
  api-mongo:
    image: go-hexagonal-api:$VERSION
    container_name: go-hexagonal-api-mongo-$ENV
    build:
      args:
        version: $VERSION
      context: .
      dockerfile: build/docker/Dockerfile
    environment:
      - env=$ENV
      - p=$CONTAINER_PORT
      - db=mongo
      - dsn=$MONGO_DSN
    depends_on:
      - mongo
    ports:
      - $HOST_PORT_MONGOAPI:$CONTAINER_PORT
  api-postgres:
    image: go-hexagonal-api:$VERSION
    container_name: go-hexagonal-api-postgres-$ENV
    build:
      args:
        version: $VERSION
      context: .
      dockerfile: build/docker/Dockerfile
    environment:
      - env=$ENV
      - p=$CONTAINER_PORT
      - db=postgres
      - dsn=$POSTGRES_DSN
    depends_on:
      - postgres
    ports:
      - $HOST_PORT_POSTGRESAPI:$CONTAINER_PORT